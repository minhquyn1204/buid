"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _SelectorSpec2 = _interopRequireDefault(require("./SelectorSpec"));

var ModelBasedSelectorSpec = /*#__PURE__*/function (_SelectorSpec) {
  (0, _inheritsLoose2["default"])(ModelBasedSelectorSpec, _SelectorSpec);

  function ModelBasedSelectorSpec(_ref) {
    var _this;

    var model = _ref.model,
        other = (0, _objectWithoutProperties2["default"])(_ref, ["model"]);
    _this = _SelectorSpec.call(this, other) || this;
    _this._model = model;
    return _this;
  }

  (0, _createClass2["default"])(ModelBasedSelectorSpec, [{
    key: "resultFunc",
    get: function get() {
      var _this2 = this;

      return function (session, idArg) {
        for (var _len = arguments.length, other = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          other[_key - 2] = arguments[_key];
        }

        var ModelClass = session[_this2._model.modelName];

        if (typeof idArg === "undefined") {
          return ModelClass.all().toModelArray().map(function (instance) {
            return _this2.valueForInstance.apply(_this2, [instance, session].concat(other));
          });
        }

        if (Array.isArray(idArg)) {
          return idArg.map(function (id) {
            return _this2.valueForInstance.apply(_this2, [ModelClass.withId(id), session].concat(other));
          });
        }

        return _this2.valueForInstance.apply(_this2, [ModelClass.withId(idArg), session].concat(other));
      };
    }
  }, {
    key: "model",
    get: function get() {
      return this._model;
    }
  }]);
  return ModelBasedSelectorSpec;
}(_SelectorSpec2["default"]);

exports["default"] = ModelBasedSelectorSpec;