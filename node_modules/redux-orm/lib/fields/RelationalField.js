"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.RelationalField = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _Field2 = _interopRequireDefault(require("./Field"));

var _DefaultFieldInstaller = _interopRequireDefault(require("./DefaultFieldInstaller"));

var _utils = require("../utils");

/* eslint-disable max-classes-per-file */

/**
 * @private
 * @memberof module:fields
 */
var RelationalField = /*#__PURE__*/function (_Field) {
  (0, _inheritsLoose2["default"])(RelationalField, _Field);

  function RelationalField() {
    var _this;

    _this = _Field.call(this) || this;

    if (arguments.length === 1 && (0, _typeof2["default"])(arguments.length <= 0 ? undefined : arguments[0]) === "object") {
      var opts = arguments.length <= 0 ? undefined : arguments[0];
      _this.toModelName = (0, _utils.normalizeModelReference)(opts.to);
      _this.relatedName = opts.relatedName;
      _this.through = (0, _utils.normalizeModelReference)(opts.through);
      _this.throughFields = opts.throughFields;
      _this.as = opts.as;
    } else {
      var _ref = [(0, _utils.normalizeModelReference)(arguments.length <= 0 ? undefined : arguments[0]), arguments.length <= 1 ? undefined : arguments[1]];
      _this.toModelName = _ref[0];
      _this.relatedName = _ref[1];
    }

    return _this;
  }

  var _proto = RelationalField.prototype;

  _proto.getBackwardsFieldName = function getBackwardsFieldName(model) {
    return this.relatedName || (0, _utils.reverseFieldName)(model.modelName);
  };

  _proto.createBackwardsVirtualField = function createBackwardsVirtualField(fieldName, model, toModel, throughModel) {
    var ThisField = this.getClass();
    return new ThisField(model.modelName, fieldName);
  };

  _proto.references = function references(model) {
    return this.toModelName === model.modelName;
  };

  (0, _createClass2["default"])(RelationalField, [{
    key: "installsBackwardsVirtualField",
    get: function get() {
      return true;
    }
  }, {
    key: "installsBackwardsDescriptor",
    get: function get() {
      return true;
    }
  }, {
    key: "installerClass",
    get: function get() {
      return /*#__PURE__*/function (_DefaultFieldInstalle) {
        (0, _inheritsLoose2["default"])(AliasedForwardsDescriptorInstaller, _DefaultFieldInstalle);

        function AliasedForwardsDescriptorInstaller() {
          return _DefaultFieldInstalle.apply(this, arguments) || this;
        }

        var _proto2 = AliasedForwardsDescriptorInstaller.prototype;

        _proto2.installForwardsDescriptor = function installForwardsDescriptor() {
          Object.defineProperty(this.model.prototype, this.field.as || this.fieldName, // use supplied name if possible
          this.field.createForwardsDescriptor(this.fieldName, this.model, this.toModel, this.throughModel));
        };

        return AliasedForwardsDescriptorInstaller;
      }(_DefaultFieldInstaller["default"]);
    }
  }]);
  return RelationalField;
}(_Field2["default"]);

exports.RelationalField = RelationalField;
var _default = RelationalField;
exports["default"] = _default;